upstream backend {
    # Le nom du service back dans votre docker-compose
    server nginx-talkmaster:8080;
    # Optimisez les connexions persistantes
    keepalive 16;
}

server {
    listen 80;
    server_name _;
    
    # Redirection vers HTTPS (à activer en production)
    # return 301 https://$host$request_uri;
    
    # Configuration pour le développement
    root /usr/share/nginx/html;
    index index.html;
    
    # Buffer size pour les requêtes
    client_max_body_size 20M;
    client_body_buffer_size 128k;
    
    # Fichiers statiques (assets) – cache long
    location ~* \.(?:css|js|mjs|json|woff2?|ttf|otf|eot|svg|ico|png|jpe?g|gif)$ {
        try_files $uri =404;
        access_log off;
        expires max;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }
    
    # Bloquer l'accès aux source maps en production (décommenter en prod)
    # location ~* \.map$ {
    #     deny all;
    #     return 404;
    # }
    
    # Proxy des appels API vers Laravel
    location /api/ {
        proxy_pass http://backend/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_read_timeout 90;
        
        # Optimisation pour les connexions persistantes
        proxy_set_header Connection "";
    }
    
    # SPA fallback – TanStack Router gère le routage côté client
    location / {
        # Essaye de servir le fichier statique, sinon index.html
        try_files $uri $uri/ /index.html;
    }
    
    # Sécurité et compression
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/javascript
        application/json
        application/x-javascript
        application/xml
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Headers de sécurité
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Désactiver l'affichage de la version de Nginx
    server_tokens off;
}

# Configuration HTTPS (à décommenter et configurer en production)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     
#     # Certificats SSL
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     
#     # Paramètres SSL optimisés
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # OCSP Stapling
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     
#     # Même configuration que pour HTTP...
#     root /usr/share/nginx/html;
#     index index.html;
#     
#     # Reste de la configuration identique à la partie HTTP...
# }